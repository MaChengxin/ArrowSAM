BootStrap: debootstrap
OSVersion: bionic
MirrorURL: http://archive.ubuntu.com/ubuntu/


%runscript
    echo "This is what happens when you run the container..."


%post
    echo "Hello from inside the container"
    
    sed -i 's/$/ universe/' /etc/apt/sources.list
    echo "deb http://archive.ubuntu.com/ubuntu bionic-updates main restricted" >> /etc/apt/sources.list
    apt-get -y update
    apt-get -y upgrade
    apt-get -y dist-upgrade

    apt-get install -y autoconf
    apt-get install -y cmake
    apt-get install -y curl
    apt-get install -y gdb
    apt-get install -y git
    apt-get install -y libboost-all-dev
    apt-get install -y libtool-bin
    apt-get install -y net-tools
    apt-get install -y vim

    apt-get install -y libssl-dev
    apt-get install -y zlib1g-dev

    apt-get install -y locales
    locale-gen "nl_NL.UTF-8"
    update-locale LC_ALL="nl_NL.UTF-8"

    apt-get install -y gdb
    apt-get install -y net-tools

    apt-get install -y python3
    apt-get install -y python3-pip
    pip3 install pyarrow==0.16.0
    pip3 install pandas

    apt-get install -y libssl-dev
    apt install -y -V lsb-release wget
    wget https://apache.bintray.com/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
    apt install -y -V ./apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
    apt update
    apt install -y -V libarrow-dev=0.16.0-1 # For C++
    apt install -y -V libarrow-flight-dev=0.16.0-1 # For Flight C++
    apt install -y -V libarrow-cuda-dev=0.16.0-1 # Dependency for libplasma-dev
    apt install -y -V libplasma-dev=0.16.0-1 # For Plasma C++
    apt install -y -V googletest
    apt install -y -V libgflags-dev

    apt-get clean

%environment
    export PATH=$PATH:/usr/local/bin
    export GCC_VERSION='5.5.0'
    export CPATH='/usr/local/include:/usr/lib'
    export PKG_CONFIG_PATH='/usr/local/lib/pkgconfig'
    export LD_LIBRARY_PATH='/usr/lib:/usr/lib/x86_64-linux-gnu:/usr/local/lib'
    export LC_ALL="nl_NL.UTF-8" # This is needed to let ./arrow-flight-benchmark run
